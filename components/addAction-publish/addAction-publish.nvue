<template>
  <div class="jucontent">
    <div></div>
    <div class="withdrawal_way">
      <text class="withdrawal_title">支付方式</text>
      <div class="way_list">
        <div class="way_single" :style="way===1?'border-color:#496DF5':'border-color:#DCDCDC;'" @click="choiceWay(1)">
          <image src="/static/mineImg/payAli.png" alt="支付宝" class="way_img">
            <text class="way_text">支付宝支付</text>
        </div>
        <div class="way_single" :style="way===2?'border-color:#496DF5':'border-color:#DCDCDC;'" @click="choiceWay(2)">
          <image src="/static/mineImg/vxpay.png" alt="微信" class="way_img">
            <text class="way_text">微信支付</text>
        </div>
      </div>
      <div class="pay_btn_box">
        <div class="pay_btn_btn" @click="payIt">
          <text class="pay_btn_text">立即支付</text>
        </div>
      </div>
    </div>
  </div>

</template>

<script>
  import { mapMutations } from 'vuex'
  import http from '@/utils/request'
  export default {
    data() {
      return {
        way: 1,
        payMsg: '',
        vip: 0,
        ali: 0,
        vx: 0,
        taskMsg: '',
        provider: '',
        feeConfigureId: 0,
        taskId: ''
      }
    },
    onShow() {
      let that = this
      that.payFunction()
      const subNVue = uni.getCurrentSubNVue();
	  
	  uni.$on('action_publish',function(data){
	  			if (data.payMsg) {
	  			  that.vip = 0
	  			  that.taskMsg = JSON.parse(data.payMsg)
	  			  that.taskId = Number(data.taskId)
	  			}
	  			if (data.vip) {
	  			  that.vip = data.vip
	  			  that.feeConfigureId = data.feeConfigureId
	  			}
	  		})
      // subNVue.onMessage((res) => {
      //   const data = res.data;
      //   if (data.payMsg) {
      //     that.vip = 0
      //     that.taskMsg = JSON.parse(data.payMsg)
      //     that.taskId = Number(data.taskId)
      //   }
      //   if (data.vip) {
      //     that.vip = data.vip
      //     that.feeConfigureId = data.feeConfigureId
      //   }
      // });
    },
    methods: {
      ...mapMutations(['updateChooseType']),
      // 选择绑定方式
      choiceWay(type) {
        let that = this
        this.way = type
      },
      // 点击支付
      payIt() {
        let that = this
        const subNVueIt = uni.getCurrentSubNVue();
        if (that.way == 1 && that.provider[0] == '') {
          uni.showToast({
            title: '此设备暂不支持支付宝支付',
            duration: 2000,
            icon: 'none'
          })
          return
        }
        if (that.way == 2 && that.provider[1] == '') {
          uni.showToast({
            title: '此设备暂不支持微信支付',
            duration: 2000,
            icon: 'none'
          })
          return
        }
        if (that.vip == 0) {
          that.publishTak()
        } else if (that.vip == 1) {
          that.openVip()
        }
        subNVueIt.hide('slide-out-bottom', 300, function () {
          // 打开后进行一些操作...  
          //   
        })
      },
      // 开通vip
      openVip() {
        let that = this
        let data = {
          feeConfigureId: this.feeConfigureId,
          payType: that.way
        }
        http('put', 'clientUser/member', data, res => {
          if (res.code == 200) {
            that.payMsg = res.data
            that.payNow()
          }
        })
      },
      // 发布任务
      publishTak() {
        let that = this
        let data = JSON.parse(JSON.stringify(that.taskMsg))
        data.payType = that.way
        // http('post', 'task/save', data, res => {
        //   if (res.code == 200) {
        //     that.payMsg = res.data
        //     that.payNow()
        //   }
        // })
        if (that.taskId) {
          data.taskId = that.taskId
          http('put', 'task/update', data, res => {
            if (res.code == 200) {
              that.payMsg = res.data
              that.payNow()
            }
          })
        } else {
          http('post', 'task/save', data, res => {
            if (res.code == 200) {
              that.payMsg = res.data
              that.payNow()
            }
          })
        }
      },
      // 预支付函数
      payFunction() {
        let that = this
        uni.getProvider({
          service: 'payment',
          success: val => {
            let payList = ['', '']
            val.provider.forEach(val => {
              if (val == 'alipay') {
                payList[0] = 'alipay'
                that.ali = 1
              } else if (val = 'wxpay') {
                that.vx = 1
                payList[1] = 'wxpay'
              }
            })
            that.provider = payList
          }
        })
      },
      // 支付函数
      payNow() {
        let that = this
        let provider = that.provider[that.way - 1]
        let orderInfo = that.payMsg
        uni.requestPayment({
          provider,
          orderInfo,
          success: msg => {
            if ((msg.channel.serviceReady && that.vip == 0) || (msg.errMsg && that.vip == 0)) {
              that.publishSuccess()
              uni.switchTab({
                 url: '/pages/index/home/home'
              })
            } else if ((msg.channel.serviceReady && that.vip == 1) || (msg.errMsg && that.vip == 0)) {
              that.vipSuccess()
            }
          },
          fail: msg => {
            
          }
        })
      },
      // 发布成功回调
      publishSuccess() {
        let that = this
        const subNVue = uni.getCurrentSubNVue();
        that.updateChooseType({})
        uni.showToast({
          title: '任务发布成功',
          duration: 2000
        })
        // subNVue.hide('slide-out-bottom', 300, function () {
        //   // 打开后进行一些操作...  
        //   //   
        // })
        // subNVue.postMessage({
        //   goback: 1,
        //   content: '任务发布成功请等待审核'
        // })
      },
      // vip开通成功
      vipSuccess() {
        let that = this
        const subNVue = uni.getCurrentSubNVue();
        // uni.showToast({
        //   title: '会员开通成功',
        //   duration: 2000
        // });
        subNVue.hide('slide-out-bottom', 300, function () {
          // 打开后进行一些操作...  
          //   
        })
        subNVue.postMessage({
          content: '开通会员成功'
        })
      }
    },
    onUnload() {
      let that = this
      that.updateChooseType({})
    }
  }
</script>

<style scoped>
  /*遮罩层 */

  .jucontent {
    flex: 1;
    justify-content: space-between;
  }

  .withdrawal_way {
    /* position: fixed; */
    height: 260px;
    /* bottom: 0;
    left: 0;
    right: 0; */
    z-index: 668;
    background-color: #fff;
    padding: 0 22rpx;
  }

  .withdrawal_title {
    border-bottom-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: #DCDCDC;
    font-size: 16px;
    height: 80rpx;
    font-weight: 400;
    color: rgba(51, 51, 51, 1);
    line-height: 80rpx;
  }

  .way_list {
    justify-content: space-between;
    flex-wrap: wrap;
    flex-direction: row;
  }

  .way_single {
    margin-top: 10px;
    padding-left: 20px;
    height: 48px;
    border-width: 1px;
    border-style: solid;
    width: 160px;
    flex-direction: row;
    align-items: center;
    border-radius: 8px;
  }

  .way_img {
    height: 28px;
    width: 28px;
  }

  .way_text {
    font-size: 14px !important;
    margin-left: 10px;
    font-weight: 400;
    color: rgba(51, 51, 51, 1);
  }

  /* 立即支付按钮 */
  .pay_btn_box {
    margin-top: 100px;
    flex-direction: row;
    justify-content: center;
  }

  .pay_btn_btn {
    width: 128px;
    height: 42px;
    background-color: rgba(73, 109, 245, 1);
    border-radius: 8px;
  }

  .pay_btn_text {
    width: 128px;
    text-align: center;
    height: 42px;
    font-size: 16px;
    font-weight: 500;
    color: rgba(255, 255, 255, 1);
    line-height: 42px;
  }
</style>